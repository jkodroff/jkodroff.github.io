<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testing on Josh Kodroff, Code Craftsman</title>
    <link>http://joshkodroff.com/categories/testing/</link>
    <description>Recent content in Testing on Josh Kodroff, Code Craftsman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Aug 2015 09:56:22 +0000</lastBuildDate>
    
	<atom:link href="http://joshkodroff.com/categories/testing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making Entity Framework More Unit-Testable</title>
      <link>http://joshkodroff.com/2015/08/08/making-entity-framework-more-testable/</link>
      <pubDate>Sat, 08 Aug 2015 09:56:22 +0000</pubDate>
      
      <guid>http://joshkodroff.com/2015/08/08/making-entity-framework-more-testable/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;

&lt;p&gt;For developers using &lt;a href=&#34;https://entityframework.codeplex.com/&#34;&gt;Entity Framework&lt;/a&gt;, unit testing code that depends on the &lt;code&gt;DbContext&lt;/code&gt; class is not the easiest thing.  If we&amp;rsquo;re interested in doing unit testing, we need to be able to use an in-memory (&amp;ldquo;fake&amp;rdquo; in &lt;a href=&#34;http://martinfowler.com/articles/mocksArentStubs.html&#34;&gt;Martin Fowler&amp;rsquo;s terminology&lt;/a&gt;) version of &lt;code&gt;DbContext&lt;/code&gt; comprised of lists of objects so that our tests do not hit the database.  This series of posts takes you through my process in getting to a facade on top of Entity Framework that results in testable code and tests that are fast to write.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>